/*
 *	Author: Shrikant Tipartiwar (Embedded_Siri)
 *
 */

#ifndef INC_STM32F407_GPIO_DRIVER_H_
#define INC_STM32F407_GPIO_DRIVER_H_

#include "stm32f407.h"

/*
 * GPIO pin Configuration Structure
 */

typedef struct {
	uint8_t GPIO_PinNumber;  				/* Stores the pin number  */
	uint8_t GPIO_PinMode;					/* Stores the pin mode - @GPIO pin possible mode */
	uint8_t GPIO_PinSpeed;					/* Stores the output speed - @GPIO pin possible mode  */
	uint8_t GPIO_PinPuPdControl;			/* Stores the - @GPIO pin pull up and pull down configuration  */
	uint8_t GPIO_PinOPType;					/* Stores the output type - push pull / open drain   */
	uint8_t GPIO_PinAltFunMode;				/* Stores the alternate function  */
}GPIO_PinConfig_t;


/*
 * This GPIO_Handle_t Structure is like Heart of GPIO.
 * Using this we can set any GPIO port with respective configurations also.
 */

typedef struct {
	GPIO_Registers_t *pGPIOx;  				/* Holds the addr of GPIO port to which the gpio pin belongs */
	GPIO_PinConfig_t GPIO_Config; 			/* Holds the GPIO pin configuration settings */
}GPIO_Handle_t;


/*
 * GPIO pin Numbers
 */

#define GPIO_PIN_NO_0				((uint16_t)0x0001)
#define GPIO_PIN_NO_1				((uint16_t)0x0002)
#define GPIO_PIN_NO_2				((uint16_t)0x0002)
#define GPIO_PIN_NO_3				((uint16_t)0x0002)
#define GPIO_PIN_NO_4				((uint16_t)0x0002)
#define GPIO_PIN_NO_5				((uint16_t)0x0002)
#define GPIO_PIN_NO_6				((uint16_t)0x0002)
#define GPIO_PIN_NO_7				((uint16_t)0x0002)
#define GPIO_PIN_NO_8				((uint16_t)0x0002)
#define GPIO_PIN_NO_9				((uint16_t)0x0002)
#define GPIO_PIN_NO_10				((uint16_t)0x0002)
#define GPIO_PIN_NO_11				((uint16_t)0x0002)
#define GPIO_PIN_NO_12				((uint16_t)0x0002)
#define GPIO_PIN_NO_13				((uint16_t)0x0002)
#define GPIO_PIN_NO_14				((uint16_t)0x0002)
#define GPIO_PIN_NO_15				((uint16_t)0x0002)

#define GPIO_PIN_0                 ((uint16_t)0x0001)  /* Pin 0 selected    */
#define GPIO_PIN_1                 ((uint16_t)0x0002)  /* Pin 1 selected    */
#define GPIO_PIN_2                 ((uint16_t)0x0004)  /* Pin 2 selected    */
#define GPIO_PIN_3                 ((uint16_t)0x0008)  /* Pin 3 selected    */
#define GPIO_PIN_4                 ((uint16_t)0x0010)  /* Pin 4 selected    */
#define GPIO_PIN_5                 ((uint16_t)0x0020)  /* Pin 5 selected    */
#define GPIO_PIN_6                 ((uint16_t)0x0040)  /* Pin 6 selected    */
#define GPIO_PIN_7                 ((uint16_t)0x0080)  /* Pin 7 selected    */
#define GPIO_PIN_8                 ((uint16_t)0x0100)  /* Pin 8 selected    */
#define GPIO_PIN_9                 ((uint16_t)0x0200)  /* Pin 9 selected    */
#define GPIO_PIN_10                ((uint16_t)0x0400)  /* Pin 10 selected   */
#define GPIO_PIN_11                ((uint16_t)0x0800)  /* Pin 11 selected   */
#define GPIO_PIN_12                ((uint16_t)0x1000)  /* Pin 12 selected   */
#define GPIO_PIN_13                ((uint16_t)0x2000)  /* Pin 13 selected   */
#define GPIO_PIN_14                ((uint16_t)0x4000)  /* Pin 14 selected   */
#define GPIO_PIN_15                ((uint16_t)0x8000)  /* Pin 15 selected   */


/*
 * GPIO pin possible mode
 */

#define GPIO_MODE_IN				0
#define GPIO_MODE_OUT				1
#define GPIO_MODE_ALTFN				2
#define GPIO_MODE_ANALOG			3

/*
 * GPIO pin possible output type
 */

#define GPIO_OP_TYPE_PP				0
#define GPIO_OP_TYPE_OD				1


/*
 * GPIO pin possible output speed
 */

#define GPIO_SPEED_LOW				0
#define GPIO_SPEED_MEDIUM			1
#define GPIO_SPEED_FAST				2
#define GPIO_SPEED_HIGH				3


/*
 * GPIO pin pull up and pull down configuration
 */

#define GPIO_NO_PUPD				0
#define GPIO_PIN_PU					1
#define GPIO_PIN_PD					2


/**********************************************************************************************
 ******************************** GPIO Driver API's *****************************************
 **********************************************************************************************/


/*--------------------------------------------------------------------------*
 *-----------------------Peripheral Clock setup-----------------------------*
 *--------------------------------------------------------------------------*/

	void GPIO_PeriClockControl(GPIO_Registers_t *pGPIOx, uint8_t en_di);


/*--------------------------------------------------------------------------*
 *--------------------------Init and De-Init--------------------------------*
 *--------------------------------------------------------------------------*/

	void GPIO_Init(GPIO_Handle_t *pGPIOHandle);
	void GPIO_DeInit(GPIO_Registers_t *pGPIOx);

/*--------------------------------------------------------------------------*
 *--------------------------Data Read and Write-----------------------------*
 *--------------------------------------------------------------------------*/

	uint8_t GPIO_ReadFromInputPin(GPIO_Registers_t *pGPIOx, uint8_t PinNumber);
	uint16_t GPIO_ReadFromInputPort(GPIO_Registers_t *pGPIOx);

	void GPIO_WriteToOutputPin(GPIO_Registers_t *pGPIOx, uint8_t PinNumber, uint8_t Value);
	void GPIO_WriteToOutputPort(GPIO_Registers_t *pGPIOx, uint16_t Value);

	void GPIO_ToggleOutPin(GPIO_Registers_t *pGPIOx, uint8_t PinNumber);


#endif /* INC_STM32F407_GPIO_DRIVER_H_ */
