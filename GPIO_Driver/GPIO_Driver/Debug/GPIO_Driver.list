
GPIO_Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000053c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006e4  080006ec  000106ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006e4  080006e4  000106ec  2**0
                  CONTENTS
  4 .ARM          00000000  080006e4  080006e4  000106ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006e4  080006ec  000106ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006e4  080006e4  000106e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006e8  080006e8  000106e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000106ec  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000106ec  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000802  00000000  00000000  0001071c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000022e  00000000  00000000  00010f1e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000098  00000000  00000000  00011150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000070  00000000  00000000  000111e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000013c7  00000000  00000000  00011258  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000bc8  00000000  00000000  0001261f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004bfb  00000000  00000000  000131e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00017de2  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000184  00000000  00000000  00017e34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080006cc 	.word	0x080006cc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080006cc 	.word	0x080006cc

080001e8 <GPIO_PeriClockControl>:


/* Peripheral Clock setup */

void GPIO_PeriClockControl(GPIO_Registers_t *pGPIOx, uint8_t en_di)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if (en_di == ENABLE){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d162      	bne.n	80002c0 <GPIO_PeriClockControl+0xd8>

		if (pGPIOx == GPIOA) {
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a64      	ldr	r2, [pc, #400]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
			GPIOA_PERI_CLK_EN();
 8000202:	4b64      	ldr	r3, [pc, #400]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a63      	ldr	r2, [pc, #396]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOH_PERI_CLK_DI();
		}else if (pGPIOx == GPIOI) {
			GPIOI_PERI_CLK_DI();
		}
	}
}
 800020e:	e0b9      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB) {
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a61      	ldr	r2, [pc, #388]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriClockControl+0x3e>
			GPIOB_PERI_CLK_EN();
 8000218:	4b5e      	ldr	r3, [pc, #376]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a5d      	ldr	r2, [pc, #372]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e0ae      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC) {
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a5c      	ldr	r2, [pc, #368]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x54>
			GPIOC_PERI_CLK_EN();
 800022e:	4b59      	ldr	r3, [pc, #356]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a58      	ldr	r2, [pc, #352]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e0a3      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD) {
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a58      	ldr	r2, [pc, #352]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x6a>
			GPIOD_PERI_CLK_EN();
 8000244:	4b53      	ldr	r3, [pc, #332]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a52      	ldr	r2, [pc, #328]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e098      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE) {
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a53      	ldr	r2, [pc, #332]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x80>
			GPIOE_PERI_CLK_EN();
 800025a:	4b4e      	ldr	r3, [pc, #312]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a4d      	ldr	r2, [pc, #308]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e08d      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF) {
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a4f      	ldr	r2, [pc, #316]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x96>
			GPIOF_PERI_CLK_EN();
 8000270:	4b48      	ldr	r3, [pc, #288]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a47      	ldr	r2, [pc, #284]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e082      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG) {
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a4a      	ldr	r2, [pc, #296]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0xac>
			GPIOG_PERI_CLK_EN();
 8000286:	4b43      	ldr	r3, [pc, #268]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a42      	ldr	r2, [pc, #264]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e077      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH) {
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a46      	ldr	r2, [pc, #280]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0xc2>
			GPIOH_PERI_CLK_EN();
 800029c:	4b3d      	ldr	r3, [pc, #244]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a3c      	ldr	r2, [pc, #240]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e06c      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI) {
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a41      	ldr	r2, [pc, #260]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d168      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
			GPIOI_PERI_CLK_EN();
 80002b2:	4b38      	ldr	r3, [pc, #224]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a37      	ldr	r2, [pc, #220]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e061      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a33      	ldr	r2, [pc, #204]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0xee>
			GPIOA_PERI_CLK_DI();
 80002c8:	4b32      	ldr	r3, [pc, #200]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a31      	ldr	r2, [pc, #196]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ce:	f023 0301 	bic.w	r3, r3, #1
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e056      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB) {
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a2f      	ldr	r2, [pc, #188]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x104>
			GPIOB_PERI_CLK_DI();
 80002de:	4b2d      	ldr	r3, [pc, #180]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a2c      	ldr	r2, [pc, #176]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e4:	f023 0302 	bic.w	r3, r3, #2
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e04b      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC) {
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a2b      	ldr	r2, [pc, #172]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x11a>
			GPIOC_PERI_CLK_DI();
 80002f4:	4b27      	ldr	r3, [pc, #156]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a26      	ldr	r2, [pc, #152]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002fa:	f023 0304 	bic.w	r3, r3, #4
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e040      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD) {
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a26      	ldr	r2, [pc, #152]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x130>
			GPIOD_PERI_CLK_DI();
 800030a:	4b22      	ldr	r3, [pc, #136]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a21      	ldr	r2, [pc, #132]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000310:	f023 0308 	bic.w	r3, r3, #8
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e035      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE) {
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a22      	ldr	r2, [pc, #136]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x146>
			GPIOE_PERI_CLK_DI();
 8000320:	4b1c      	ldr	r3, [pc, #112]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a1b      	ldr	r2, [pc, #108]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000326:	f023 0310 	bic.w	r3, r3, #16
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e02a      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF) {
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a1d      	ldr	r2, [pc, #116]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x15c>
			GPIOF_PERI_CLK_DI();
 8000336:	4b17      	ldr	r3, [pc, #92]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a16      	ldr	r2, [pc, #88]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800033c:	f023 0320 	bic.w	r3, r3, #32
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e01f      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG) {
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a19      	ldr	r2, [pc, #100]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x172>
			GPIOG_PERI_CLK_DI();
 800034c:	4b11      	ldr	r3, [pc, #68]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a10      	ldr	r2, [pc, #64]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000352:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e014      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH) {
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a14      	ldr	r2, [pc, #80]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x188>
			GPIOH_PERI_CLK_DI();
 8000362:	4b0c      	ldr	r3, [pc, #48]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a0b      	ldr	r2, [pc, #44]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000368:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e009      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI) {
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a10      	ldr	r2, [pc, #64]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d105      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
			GPIOI_PERI_CLK_DI();
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a05      	ldr	r2, [pc, #20]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	bf00      	nop
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038e:	4770      	bx	lr
 8000390:	40020000 	.word	0x40020000
 8000394:	40023800 	.word	0x40023800
 8000398:	40020400 	.word	0x40020400
 800039c:	40020800 	.word	0x40020800
 80003a0:	40020c00 	.word	0x40020c00
 80003a4:	40021000 	.word	0x40021000
 80003a8:	40021400 	.word	0x40021400
 80003ac:	40021800 	.word	0x40021800
 80003b0:	40021c00 	.word	0x40021c00
 80003b4:	40022000 	.word	0x40022000

080003b8 <GPIO_Init>:


/* Init and De-Init */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b8:	b480      	push	{r7}
 80003ba:	b089      	sub	sp, #36	; 0x24
 80003bc:	af00      	add	r7, sp, #0
 80003be:	6078      	str	r0, [r7, #4]
	uint32_t position;
	uint32_t ioposition = 0x00U;
 80003c0:	2300      	movs	r3, #0
 80003c2:	61bb      	str	r3, [r7, #24]
	uint32_t iocurrent = 0x00U;
 80003c4:	2300      	movs	r3, #0
 80003c6:	617b      	str	r3, [r7, #20]
	uint32_t temp = 0x00U;
 80003c8:	2300      	movs	r3, #0
 80003ca:	613b      	str	r3, [r7, #16]


	/* Configure the port pins */
	  for(position = 0U; position < 16; position++)  /* 16 is number represent number of pins on a port*/
 80003cc:	2300      	movs	r3, #0
 80003ce:	61fb      	str	r3, [r7, #28]
 80003d0:	e0c1      	b.n	8000556 <GPIO_Init+0x19e>
	  {
	    /* Get the I/O position */
	    ioposition = 0x01U << position;
 80003d2:	2201      	movs	r2, #1
 80003d4:	69fb      	ldr	r3, [r7, #28]
 80003d6:	fa02 f303 	lsl.w	r3, r2, r3
 80003da:	61bb      	str	r3, [r7, #24]
	    /* Get the current I/O position */
	    iocurrent = (uint32_t)pGPIOHandle->GPIO_Config.GPIO_PinNumber & ioposition;
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	889b      	ldrh	r3, [r3, #4]
 80003e0:	461a      	mov	r2, r3
 80003e2:	69bb      	ldr	r3, [r7, #24]
 80003e4:	4013      	ands	r3, r2
 80003e6:	617b      	str	r3, [r7, #20]

	    if(iocurrent == ioposition)
 80003e8:	697a      	ldr	r2, [r7, #20]
 80003ea:	69bb      	ldr	r3, [r7, #24]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	f040 80af 	bne.w	8000550 <GPIO_Init+0x198>
	    {

	        /* 1. Configure the mode of gpio pin */

	        temp = (pGPIOHandle->GPIO_Config.GPIO_PinMode << (2 * position));
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	799b      	ldrb	r3, [r3, #6]
 80003f6:	461a      	mov	r2, r3
 80003f8:	69fb      	ldr	r3, [r7, #28]
 80003fa:	005b      	lsls	r3, r3, #1
 80003fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000400:	613b      	str	r3, [r7, #16]
	        pGPIOHandle->pGPIOx->MODER &= ~(0x3 << position); // Clearing the bits
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	681a      	ldr	r2, [r3, #0]
 8000408:	2103      	movs	r1, #3
 800040a:	69fb      	ldr	r3, [r7, #28]
 800040c:	fa01 f303 	lsl.w	r3, r1, r3
 8000410:	43db      	mvns	r3, r3
 8000412:	4619      	mov	r1, r3
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	400a      	ands	r2, r1
 800041a:	601a      	str	r2, [r3, #0]
	        pGPIOHandle->pGPIOx->MODER |= temp; // Setting the bits
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	6819      	ldr	r1, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	693a      	ldr	r2, [r7, #16]
 8000428:	430a      	orrs	r2, r1
 800042a:	601a      	str	r2, [r3, #0]


	        temp = 0x00U;
 800042c:	2300      	movs	r3, #0
 800042e:	613b      	str	r3, [r7, #16]

	        /* 2. Configure the speed */

	        temp = (pGPIOHandle->GPIO_Config.GPIO_PinSpeed << (2 * position));
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	79db      	ldrb	r3, [r3, #7]
 8000434:	461a      	mov	r2, r3
 8000436:	69fb      	ldr	r3, [r7, #28]
 8000438:	005b      	lsls	r3, r3, #1
 800043a:	fa02 f303 	lsl.w	r3, r2, r3
 800043e:	613b      	str	r3, [r7, #16]
	        pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << position); // Clearing the bits
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	689a      	ldr	r2, [r3, #8]
 8000446:	2103      	movs	r1, #3
 8000448:	69fb      	ldr	r3, [r7, #28]
 800044a:	fa01 f303 	lsl.w	r3, r1, r3
 800044e:	43db      	mvns	r3, r3
 8000450:	4619      	mov	r1, r3
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	400a      	ands	r2, r1
 8000458:	609a      	str	r2, [r3, #8]
	        pGPIOHandle->pGPIOx->OSPEEDR |= temp; // Setting the bits
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	6899      	ldr	r1, [r3, #8]
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	693a      	ldr	r2, [r7, #16]
 8000466:	430a      	orrs	r2, r1
 8000468:	609a      	str	r2, [r3, #8]

	        temp = 0x00U;
 800046a:	2300      	movs	r3, #0
 800046c:	613b      	str	r3, [r7, #16]

	        /* 3. Configure the PuPd settings */

	        temp = (pGPIOHandle->GPIO_Config.GPIO_PinPuPdControl << (2 * position));
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	7a1b      	ldrb	r3, [r3, #8]
 8000472:	461a      	mov	r2, r3
 8000474:	69fb      	ldr	r3, [r7, #28]
 8000476:	005b      	lsls	r3, r3, #1
 8000478:	fa02 f303 	lsl.w	r3, r2, r3
 800047c:	613b      	str	r3, [r7, #16]
	        pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << position); // Clearing the bits
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	68da      	ldr	r2, [r3, #12]
 8000484:	2103      	movs	r1, #3
 8000486:	69fb      	ldr	r3, [r7, #28]
 8000488:	fa01 f303 	lsl.w	r3, r1, r3
 800048c:	43db      	mvns	r3, r3
 800048e:	4619      	mov	r1, r3
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	400a      	ands	r2, r1
 8000496:	60da      	str	r2, [r3, #12]
	        pGPIOHandle->pGPIOx->PUPDR |= temp; // Setting the bits
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	68d9      	ldr	r1, [r3, #12]
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	693a      	ldr	r2, [r7, #16]
 80004a4:	430a      	orrs	r2, r1
 80004a6:	60da      	str	r2, [r3, #12]

	        temp = 0x00U;
 80004a8:	2300      	movs	r3, #0
 80004aa:	613b      	str	r3, [r7, #16]

	        /* 4. Configure the optype */

	        temp = (pGPIOHandle->GPIO_Config.GPIO_PinOPType << (position));
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	7a5b      	ldrb	r3, [r3, #9]
 80004b0:	461a      	mov	r2, r3
 80004b2:	69fb      	ldr	r3, [r7, #28]
 80004b4:	fa02 f303 	lsl.w	r3, r2, r3
 80004b8:	613b      	str	r3, [r7, #16]
	        pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << position); // Clearing the bits
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	685a      	ldr	r2, [r3, #4]
 80004c0:	2101      	movs	r1, #1
 80004c2:	69fb      	ldr	r3, [r7, #28]
 80004c4:	fa01 f303 	lsl.w	r3, r1, r3
 80004c8:	43db      	mvns	r3, r3
 80004ca:	4619      	mov	r1, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	400a      	ands	r2, r1
 80004d2:	605a      	str	r2, [r3, #4]
	        pGPIOHandle->pGPIOx->OTYPER |= temp; // Setting the bits
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	6859      	ldr	r1, [r3, #4]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	693a      	ldr	r2, [r7, #16]
 80004e0:	430a      	orrs	r2, r1
 80004e2:	605a      	str	r2, [r3, #4]

	        temp = 0x00U;
 80004e4:	2300      	movs	r3, #0
 80004e6:	613b      	str	r3, [r7, #16]

	        /* 5. Configure the alternate function */

	        if (pGPIOHandle->GPIO_Config.GPIO_PinMode == GPIO_MODE_ALTFN) {
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	799b      	ldrb	r3, [r3, #6]
 80004ec:	2b02      	cmp	r3, #2
 80004ee:	d12f      	bne.n	8000550 <GPIO_Init+0x198>

	            uint32_t temp1, temp2;

	            temp1 = position / 8;
 80004f0:	69fb      	ldr	r3, [r7, #28]
 80004f2:	08db      	lsrs	r3, r3, #3
 80004f4:	60fb      	str	r3, [r7, #12]
	            temp2 = position % 8;
 80004f6:	69fb      	ldr	r3, [r7, #28]
 80004f8:	f003 0307 	and.w	r3, r3, #7
 80004fc:	60bb      	str	r3, [r7, #8]
	            pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // Clearing the bits
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	68fa      	ldr	r2, [r7, #12]
 8000504:	3208      	adds	r2, #8
 8000506:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800050a:	68bb      	ldr	r3, [r7, #8]
 800050c:	009b      	lsls	r3, r3, #2
 800050e:	210f      	movs	r1, #15
 8000510:	fa01 f303 	lsl.w	r3, r1, r3
 8000514:	43db      	mvns	r3, r3
 8000516:	4619      	mov	r1, r3
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	4011      	ands	r1, r2
 800051e:	68fa      	ldr	r2, [r7, #12]
 8000520:	3208      	adds	r2, #8
 8000522:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	            pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_Config.GPIO_PinAltFunMode << (4 * temp2));  // Settings the bits
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	68fa      	ldr	r2, [r7, #12]
 800052c:	3208      	adds	r2, #8
 800052e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	7a9b      	ldrb	r3, [r3, #10]
 8000536:	4619      	mov	r1, r3
 8000538:	68bb      	ldr	r3, [r7, #8]
 800053a:	009b      	lsls	r3, r3, #2
 800053c:	fa01 f303 	lsl.w	r3, r1, r3
 8000540:	4619      	mov	r1, r3
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	4311      	orrs	r1, r2
 8000548:	68fa      	ldr	r2, [r7, #12]
 800054a:	3208      	adds	r2, #8
 800054c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	  for(position = 0U; position < 16; position++)  /* 16 is number represent number of pins on a port*/
 8000550:	69fb      	ldr	r3, [r7, #28]
 8000552:	3301      	adds	r3, #1
 8000554:	61fb      	str	r3, [r7, #28]
 8000556:	69fb      	ldr	r3, [r7, #28]
 8000558:	2b0f      	cmp	r3, #15
 800055a:	f67f af3a 	bls.w	80003d2 <GPIO_Init+0x1a>

	    }

	  }

}
 800055e:	bf00      	nop
 8000560:	bf00      	nop
 8000562:	3724      	adds	r7, #36	; 0x24
 8000564:	46bd      	mov	sp, r7
 8000566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056a:	4770      	bx	lr

0800056c <GPIO_WriteToOutputPin>:
	return value;
}


void GPIO_WriteToOutputPin(GPIO_Registers_t *pGPIOx, uint16_t PinNumber, uint8_t Set_Reset)
{
 800056c:	b480      	push	{r7}
 800056e:	b083      	sub	sp, #12
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
 8000574:	460b      	mov	r3, r1
 8000576:	807b      	strh	r3, [r7, #2]
 8000578:	4613      	mov	r3, r2
 800057a:	707b      	strb	r3, [r7, #1]
	if (Set_Reset == GPIO_PIN_SET) {
 800057c:	787b      	ldrb	r3, [r7, #1]
 800057e:	2b01      	cmp	r3, #1
 8000580:	d106      	bne.n	8000590 <GPIO_WriteToOutputPin+0x24>

		/* Write 1 to output data register at the bit field corresponding to pin number */
		pGPIOx->ODR |= PinNumber;
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	695a      	ldr	r2, [r3, #20]
 8000586:	887b      	ldrh	r3, [r7, #2]
 8000588:	431a      	orrs	r2, r3
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	615a      	str	r2, [r3, #20]

	} else {
		pGPIOx->ODR &= ~PinNumber;
	}
}
 800058e:	e006      	b.n	800059e <GPIO_WriteToOutputPin+0x32>
		pGPIOx->ODR &= ~PinNumber;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	695b      	ldr	r3, [r3, #20]
 8000594:	887a      	ldrh	r2, [r7, #2]
 8000596:	43d2      	mvns	r2, r2
 8000598:	401a      	ands	r2, r3
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	615a      	str	r2, [r3, #20]
}
 800059e:	bf00      	nop
 80005a0:	370c      	adds	r7, #12
 80005a2:	46bd      	mov	sp, r7
 80005a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a8:	4770      	bx	lr
	...

080005ac <delay>:
#include <stdint.h>
#include "stm32f407.h"
#include "stm32f407_gpio_driver.h"

void delay(void)
{
 80005ac:	b480      	push	{r7}
 80005ae:	b083      	sub	sp, #12
 80005b0:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000; i++);
 80005b2:	2300      	movs	r3, #0
 80005b4:	607b      	str	r3, [r7, #4]
 80005b6:	e002      	b.n	80005be <delay+0x12>
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	3301      	adds	r3, #1
 80005bc:	607b      	str	r3, [r7, #4]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	4a04      	ldr	r2, [pc, #16]	; (80005d4 <delay+0x28>)
 80005c2:	4293      	cmp	r3, r2
 80005c4:	d9f8      	bls.n	80005b8 <delay+0xc>
}
 80005c6:	bf00      	nop
 80005c8:	bf00      	nop
 80005ca:	370c      	adds	r7, #12
 80005cc:	46bd      	mov	sp, r7
 80005ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d2:	4770      	bx	lr
 80005d4:	0007a11f 	.word	0x0007a11f

080005d8 <main>:

int main(void)
{
 80005d8:	b580      	push	{r7, lr}
 80005da:	b084      	sub	sp, #16
 80005dc:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed;


    GpioLed.pGPIOx = GPIOD;
 80005de:	4b13      	ldr	r3, [pc, #76]	; (800062c <main+0x54>)
 80005e0:	607b      	str	r3, [r7, #4]

    GpioLed.GPIO_Config.GPIO_PinNumber = GPIO_PIN_NO_12 |GPIO_PIN_NO_13 | GPIO_PIN_NO_14 | GPIO_PIN_NO_15;
 80005e2:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 80005e6:	813b      	strh	r3, [r7, #8]
    GpioLed.GPIO_Config.GPIO_PinMode = GPIO_MODE_OUT;
 80005e8:	2301      	movs	r3, #1
 80005ea:	72bb      	strb	r3, [r7, #10]
    GpioLed.GPIO_Config.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80005ec:	2302      	movs	r3, #2
 80005ee:	72fb      	strb	r3, [r7, #11]
    GpioLed.GPIO_Config.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80005f0:	2300      	movs	r3, #0
 80005f2:	737b      	strb	r3, [r7, #13]
    GpioLed.GPIO_Config.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80005f4:	2300      	movs	r3, #0
 80005f6:	733b      	strb	r3, [r7, #12]

    GPIO_PeriClockControl(GPIOD, ENABLE);
 80005f8:	2101      	movs	r1, #1
 80005fa:	480c      	ldr	r0, [pc, #48]	; (800062c <main+0x54>)
 80005fc:	f7ff fdf4 	bl	80001e8 <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed);
 8000600:	1d3b      	adds	r3, r7, #4
 8000602:	4618      	mov	r0, r3
 8000604:	f7ff fed8 	bl	80003b8 <GPIO_Init>

    while(1) {
    	delay();
 8000608:	f7ff ffd0 	bl	80005ac <delay>
    	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, GPIO_PIN_SET);
 800060c:	2201      	movs	r2, #1
 800060e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000612:	4806      	ldr	r0, [pc, #24]	; (800062c <main+0x54>)
 8000614:	f7ff ffaa 	bl	800056c <GPIO_WriteToOutputPin>
    	delay();
 8000618:	f7ff ffc8 	bl	80005ac <delay>
    	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, GPIO_PIN_RESET);
 800061c:	2200      	movs	r2, #0
 800061e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000622:	4802      	ldr	r0, [pc, #8]	; (800062c <main+0x54>)
 8000624:	f7ff ffa2 	bl	800056c <GPIO_WriteToOutputPin>
    	delay();
 8000628:	e7ee      	b.n	8000608 <main+0x30>
 800062a:	bf00      	nop
 800062c:	40020c00 	.word	0x40020c00

08000630 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000630:	480d      	ldr	r0, [pc, #52]	; (8000668 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000632:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000634:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000638:	480c      	ldr	r0, [pc, #48]	; (800066c <LoopForever+0x6>)
  ldr r1, =_edata
 800063a:	490d      	ldr	r1, [pc, #52]	; (8000670 <LoopForever+0xa>)
  ldr r2, =_sidata
 800063c:	4a0d      	ldr	r2, [pc, #52]	; (8000674 <LoopForever+0xe>)
  movs r3, #0
 800063e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000640:	e002      	b.n	8000648 <LoopCopyDataInit>

08000642 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000642:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000644:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000646:	3304      	adds	r3, #4

08000648 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000648:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800064a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800064c:	d3f9      	bcc.n	8000642 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800064e:	4a0a      	ldr	r2, [pc, #40]	; (8000678 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000650:	4c0a      	ldr	r4, [pc, #40]	; (800067c <LoopForever+0x16>)
  movs r3, #0
 8000652:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000654:	e001      	b.n	800065a <LoopFillZerobss>

08000656 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000656:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000658:	3204      	adds	r2, #4

0800065a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800065a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800065c:	d3fb      	bcc.n	8000656 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800065e:	f000 f811 	bl	8000684 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000662:	f7ff ffb9 	bl	80005d8 <main>

08000666 <LoopForever>:

LoopForever:
    b LoopForever
 8000666:	e7fe      	b.n	8000666 <LoopForever>
  ldr   r0, =_estack
 8000668:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800066c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000670:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000674:	080006ec 	.word	0x080006ec
  ldr r2, =_sbss
 8000678:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800067c:	2000001c 	.word	0x2000001c

08000680 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000680:	e7fe      	b.n	8000680 <ADC_IRQHandler>
	...

08000684 <__libc_init_array>:
 8000684:	b570      	push	{r4, r5, r6, lr}
 8000686:	4d0d      	ldr	r5, [pc, #52]	; (80006bc <__libc_init_array+0x38>)
 8000688:	4c0d      	ldr	r4, [pc, #52]	; (80006c0 <__libc_init_array+0x3c>)
 800068a:	1b64      	subs	r4, r4, r5
 800068c:	10a4      	asrs	r4, r4, #2
 800068e:	2600      	movs	r6, #0
 8000690:	42a6      	cmp	r6, r4
 8000692:	d109      	bne.n	80006a8 <__libc_init_array+0x24>
 8000694:	4d0b      	ldr	r5, [pc, #44]	; (80006c4 <__libc_init_array+0x40>)
 8000696:	4c0c      	ldr	r4, [pc, #48]	; (80006c8 <__libc_init_array+0x44>)
 8000698:	f000 f818 	bl	80006cc <_init>
 800069c:	1b64      	subs	r4, r4, r5
 800069e:	10a4      	asrs	r4, r4, #2
 80006a0:	2600      	movs	r6, #0
 80006a2:	42a6      	cmp	r6, r4
 80006a4:	d105      	bne.n	80006b2 <__libc_init_array+0x2e>
 80006a6:	bd70      	pop	{r4, r5, r6, pc}
 80006a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ac:	4798      	blx	r3
 80006ae:	3601      	adds	r6, #1
 80006b0:	e7ee      	b.n	8000690 <__libc_init_array+0xc>
 80006b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80006b6:	4798      	blx	r3
 80006b8:	3601      	adds	r6, #1
 80006ba:	e7f2      	b.n	80006a2 <__libc_init_array+0x1e>
 80006bc:	080006e4 	.word	0x080006e4
 80006c0:	080006e4 	.word	0x080006e4
 80006c4:	080006e4 	.word	0x080006e4
 80006c8:	080006e8 	.word	0x080006e8

080006cc <_init>:
 80006cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ce:	bf00      	nop
 80006d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006d2:	bc08      	pop	{r3}
 80006d4:	469e      	mov	lr, r3
 80006d6:	4770      	bx	lr

080006d8 <_fini>:
 80006d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006da:	bf00      	nop
 80006dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006de:	bc08      	pop	{r3}
 80006e0:	469e      	mov	lr, r3
 80006e2:	4770      	bx	lr
